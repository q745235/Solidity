/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "ERC1155Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Burnable__factory>;
    getContractFactory(
      name: "ERC1155Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Pausable__factory>;
    getContractFactory(
      name: "ERC1155Supply",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Supply__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Burnable__factory>;
    getContractFactory(
      name: "ERC20Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Pausable__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Burnable__factory>;
    getContractFactory(
      name: "ERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Enumerable__factory>;
    getContractFactory(
      name: "ERC721Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Pausable__factory>;
    getContractFactory(
      name: "ERC721URIStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721URIStorage__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "Ticket",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ticket__factory>;
    getContractFactory(
      name: "ERC721Example",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Example__factory>;
    getContractFactory(
      name: "ERC1155ApproveLock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155ApproveLock__factory>;
    getContractFactory(
      name: "ERC1155Pro",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Pro__factory>;
    getContractFactory(
      name: "ERC1155Test",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Test__factory>;
    getContractFactory(
      name: "ERC20Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Base__factory>;
    getContractFactory(
      name: "ERC20Pro",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Pro__factory>;
    getContractFactory(
      name: "ERC721ApproveLock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721ApproveLock__factory>;
    getContractFactory(
      name: "ERC721Pro",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Pro__factory>;
    getContractFactory(
      name: "Fee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Fee__factory>;
    getContractFactory(
      name: "HashId",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HashId__factory>;
    getContractFactory(
      name: "MultiPurchaseTime",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MultiPurchaseTime__factory>;
    getContractFactory(
      name: "PayUsdt",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PayUsdt__factory>;
    getContractFactory(
      name: "Permission",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Permission__factory>;
    getContractFactory(
      name: "ProjectFee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProjectFee__factory>;
    getContractFactory(
      name: "PurchaseTime",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PurchaseTime__factory>;
    getContractFactory(
      name: "TradeData",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TradeData__factory>;
    getContractFactory(
      name: "UsePausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UsePausable__factory>;
    getContractFactory(
      name: "WhiteList",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WhiteList__factory>;
    getContractFactory(
      name: "Withdraw",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Withdraw__factory>;
    getContractFactory(
      name: "TestDutchAuction1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestDutchAuction1__factory>;
    getContractFactory(
      name: "TestDutchAuction2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestDutchAuction2__factory>;
    getContractFactory(
      name: "TestPermission",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestPermission__factory>;
    getContractFactory(
      name: "TestStatistics",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestStatistics__factory>;

    getContractAt(
      name: "AccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "IAccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "ERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "ERC1155Burnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Burnable>;
    getContractAt(
      name: "ERC1155Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Pausable>;
    getContractAt(
      name: "ERC1155Supply",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Supply>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Burnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Burnable>;
    getContractAt(
      name: "ERC20Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Pausable>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721Burnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Burnable>;
    getContractAt(
      name: "ERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Enumerable>;
    getContractAt(
      name: "ERC721Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Pausable>;
    getContractAt(
      name: "ERC721URIStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721URIStorage>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "Ticket",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ticket>;
    getContractAt(
      name: "ERC721Example",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Example>;
    getContractAt(
      name: "ERC1155ApproveLock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155ApproveLock>;
    getContractAt(
      name: "ERC1155Pro",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Pro>;
    getContractAt(
      name: "ERC1155Test",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Test>;
    getContractAt(
      name: "ERC20Base",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Base>;
    getContractAt(
      name: "ERC20Pro",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Pro>;
    getContractAt(
      name: "ERC721ApproveLock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721ApproveLock>;
    getContractAt(
      name: "ERC721Pro",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Pro>;
    getContractAt(
      name: "Fee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Fee>;
    getContractAt(
      name: "HashId",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HashId>;
    getContractAt(
      name: "MultiPurchaseTime",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MultiPurchaseTime>;
    getContractAt(
      name: "PayUsdt",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PayUsdt>;
    getContractAt(
      name: "Permission",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Permission>;
    getContractAt(
      name: "ProjectFee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProjectFee>;
    getContractAt(
      name: "PurchaseTime",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PurchaseTime>;
    getContractAt(
      name: "TradeData",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TradeData>;
    getContractAt(
      name: "UsePausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UsePausable>;
    getContractAt(
      name: "WhiteList",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WhiteList>;
    getContractAt(
      name: "Withdraw",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Withdraw>;
    getContractAt(
      name: "TestDutchAuction1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestDutchAuction1>;
    getContractAt(
      name: "TestDutchAuction2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestDutchAuction2>;
    getContractAt(
      name: "TestPermission",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestPermission>;
    getContractAt(
      name: "TestStatistics",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestStatistics>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
