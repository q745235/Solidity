/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { HashId, HashIdInterface } from "../HashId";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_privateWord",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161024f38038061024f83398101604081905261002f916100f8565b8051610042906000906020840190610049565b5050610202565b828054610055906101c7565b90600052602060002090601f01602090048101928261007757600085556100bd565b82601f1061009057805160ff19168380011785556100bd565b828001600101855582156100bd579182015b828111156100bd5782518255916020019190600101906100a2565b506100c99291506100cd565b5090565b5b808211156100c957600081556001016100ce565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561010b57600080fd5b82516001600160401b038082111561012257600080fd5b818501915085601f83011261013657600080fd5b815181811115610148576101486100e2565b604051601f8201601f19908116603f01168101908382118183101715610170576101706100e2565b81604052828152888684870101111561018857600080fd5b600093505b828410156101aa578484018601518185018701529285019261018d565b828411156101bb5760008684830101525b98975050505050505050565b600181811c908216806101db57607f821691505b602082108114156101fc57634e487b7160e01b600052602260045260246000fd5b50919050565b603f806102106000396000f3fe6080604052600080fdfea26469706673582212206854799fbb75755aba1fce6a852afa30491cfc1fd1940cdc472e3cebb3a9c68964736f6c634300080c0033";

export class HashId__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _privateWord: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<HashId> {
    return super.deploy(_privateWord, overrides || {}) as Promise<HashId>;
  }
  getDeployTransaction(
    _privateWord: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_privateWord, overrides || {});
  }
  attach(address: string): HashId {
    return super.attach(address) as HashId;
  }
  connect(signer: Signer): HashId__factory {
    return super.connect(signer) as HashId__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HashIdInterface {
    return new utils.Interface(_abi) as HashIdInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): HashId {
    return new Contract(address, _abi, signerOrProvider) as HashId;
  }
}
